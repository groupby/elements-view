{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./presets/core.ts","webpack:///(webpack)/buildin/global.js","webpack:///./packages/@sfx/core/src/core.ts","webpack:///./packages/@sfx/core/src/index.ts","webpack:///./packages/@sfx/core/src/utils/core.ts","webpack:///./presets/core.ts-exposed"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;AClFA,oFAA0B;;;;;;;;;;;;ACA1B;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;AClBA,+FAMsB;AAEtB;;;;GAIG;AACH;IAAA;QACE;;;;;;;WAOG;QACH,aAAQ,GAAmB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE/C;;;;;WAKG;QACH,cAAS,GAAoB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAgDnD,CAAC;IA9CC;;;;;;;;;;;;;;;;;;;;;;;;OAwBG;IACH,uBAAQ,GAAR,UAAS,OAAiB;QACxB,IAAM,mBAAmB,GAAG,mCAA4B,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjF,IAAI,mBAAmB,CAAC,MAAM,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC5E;QAED,sBAAe,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAExD,kBAAW,CAAC,OAAO,CAAC,CAAC;QACrB,mBAAY,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACH,4BAAa,GAAb;QACE,wBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAChF,CAAC;IACH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;AC/ED,mFAAyC;AAAhC,6BAAO,CAAQ;;;;;;;;;;;;;;;ACExB;;;;;;;;GAQG;AACH,SAAgB,4BAA4B,CAAC,OAAiB,EAAE,QAAwB;IACtF,IAAM,SAAS,GACV,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QACrB,OAAO,CAAC,GAAG,CAAC,UAAC,EAAqB;YAAP,uBAAI;QAAQ,WAAI;IAAJ,CAAI,CAAC,CAChD,CAAC;IACF,IAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,MAAM;QAC3C,OAAW,IAAI,QAAK,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;IAC/C,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,IAAM,YAAY,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC;IACxC,IAAM,WAAW,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtC,IAAM,UAAU,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAApB,CAAoB,CAAC,CAAC,CAAC;IAExF,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AAChD,CAAC;AAbD,oEAaC;AAED;;;;;;;;;GASG;AACH,SAAgB,eAAe,CAAC,OAAiB,EAAE,QAAwB,EAAE,SAA0B;IACrG,IAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAEvC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;QACrB,IAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,+BAAI,CAAqB;QAEjC,eAAe,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACrC,OAAO,eAAe,CAAC;AACzB,CAAC;AAfD,0CAeC;AAED;;;;GAIG;AACH,SAAgB,WAAW,CAAC,OAAiB;IAC3C,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;QACrB,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;YACrC,MAAM,CAAC,IAAI,EAAE,CAAC;SACf;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAND,kCAMC;AAED;;;;GAIG;AACH,SAAgB,YAAY,CAAC,OAAiB;IAC5C,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;QACrB,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,UAAU,EAAE;YACtC,MAAM,CAAC,KAAK,EAAE,CAAC;SAChB;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAND,oCAMC;AAED;;;;;;;;GAQG;AACH,SAAgB,iBAAiB,CAAC,KAAe,EAAE,QAAwB,EAAE,SAA0B;IACrG,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;QACjB,IAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,UAAU,EAAE;YAC3C,MAAM,CAAC,UAAU,EAAE,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IACH,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtB,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,8CAWC;;;;;;;;;;;;ACnGD,mFAAqC,mBAAO,CAAC,iGAA8E,E","file":"sfx-core-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./presets/core.ts-exposed\");\n","export * from '@sfx/core';\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { Plugin, PluginDirectory, PluginRegistry } from './plugin';\nimport {\n  calculateMissingDependencies,\n  initPlugins,\n  readyPlugins,\n  registerPlugins,\n  unregisterPlugins,\n} from './utils/core';\n\n/**\n * The core of the SF-X plugin system. This entity is responsible for\n * managing plugins and provides a mechanism for plugins to communicate\n * with each other.\n */\nexport default class Core {\n  /**\n   * The plugin registry. This object is a dictionary containing plugin\n   * names as keys and their corresponding exposed values as values.\n   *\n   * The preferred way to access plugins in the registry is through\n   * another plugin. Accessing the registry through Core outside of a\n   * plugin is discouraged.\n   */\n  registry: PluginRegistry = Object.create(null);\n\n  /**\n   * The plugin directory. This object is a dictionary containing plugin\n   * names as keys and the plugin objects as values.\n   *\n   * Plugins do not have access to this directory.\n   */\n  directory: PluginDirectory = Object.create(null);\n\n  /**\n   * Register one or more plugins with Core.\n   *\n   * Plugins given here are registered as a batch: the next lifecycle\n   * event does not occur until all plugins in this batch have\n   * experienced the current lifecycle event.\n   *\n   * The registration lifecycle is as follows:\n   *\n   * 1. **Registration:** The registry is populated with each plugin's\n   *    name and the value that it wants to expose. Plugins cannot\n   *    assume that other plugins have been registered.\n   * 2. **Initialization:** Plugins perform setup tasks. Plugins are\n   *    aware of the existence of other plugins, but should not make use\n   *    of their functionality as they may not yet be initialized.\n   * 3. **Ready:** Registration is complete. All plugins have been\n   *    initialized, and plugins may make use of other plugins.\n   *\n   * This function ensures that all plugin dependencies are available\n   * before proceeding to register the plugins. Circular dependencies\n   * are supported. If dependencies are missing, an error will be\n   * thrown.\n   *\n   * @param plugins An array of plugin instances to register.\n   */\n  register(plugins: Plugin[]) {\n    const missingDependencies = calculateMissingDependencies(plugins, this.registry);\n    if (missingDependencies.length) {\n      throw new Error('Missing dependencies: ' + missingDependencies.join(', '));\n    }\n\n    registerPlugins(plugins, this.registry, this.directory);\n\n    initPlugins(plugins);\n    readyPlugins(plugins);\n  }\n\n  /**\n   * Unregisters all plugins. The plugin registry and directory are both\n   * cleared. The optional `unregister` function of each plugin is\n   * called when the plugin is unregistered. The order in which the\n   * plugins are unregistered is unspecified.\n   */\n  unregisterAll() {\n    unregisterPlugins(Object.keys(this.directory), this.registry, this.directory);\n  }\n}\n","export { default as Core } from './core';\nexport { Plugin, PluginMetadata, PluginRegistry } from './plugin';\n","import { Plugin, PluginDirectory, PluginRegistry } from '../plugin';\n\n/**\n * Calculates the missing dependencies of the given plugins. The given\n * plugins and the plugins in the registry are eligible to satisfy\n * dependencies.\n *\n * @param plugins The plugins whose dependencies should be checked.\n * @param registry The plugin registry containing all registered plugins.\n * @returns An array of names of missing plugins.\n */\nexport function calculateMissingDependencies(plugins: Plugin[], registry: PluginRegistry): string[] {\n  const available = [\n    ...Object.keys(registry),\n    ...plugins.map(({ metadata: { name }}) => name),\n  ];\n  const required = plugins.reduce((memo, plugin) => {\n    return [...memo, ...plugin.metadata.depends];\n  }, []);\n  const availableSet = new Set(available);\n  const requiredSet = new Set(required);\n  const difference = new Set(Array.from(requiredSet).filter((p) => !availableSet.has(p)));\n\n  return Array.from(difference.values()).sort();\n}\n\n/**\n * Calls the `register` function of each plugin. The values returned by\n * each plugin are added to the given registry.\n *\n * @param plugins The plugins to register.\n * @param registry The registry into which to add the plugins' exposed values.\n * @param directory The directory into which to add the plugins.\n * @returns An object containing the keys and values of the new items\n * added to the registry.\n */\nexport function registerPlugins(plugins: Plugin[], registry: PluginRegistry, directory: PluginDirectory): PluginRegistry {\n  const newlyRegistered = Object.create(null);\n  const newPlugins = Object.create(null);\n\n  plugins.forEach((plugin) => {\n    const exposedValue = plugin.register(Object.create(registry));\n    const { name } = plugin.metadata;\n\n    newlyRegistered[name] = exposedValue;\n    newPlugins[name] = plugin;\n  });\n\n  Object.assign(registry, newlyRegistered);\n  Object.assign(directory, newPlugins);\n  return newlyRegistered;\n}\n\n/**\n * Calls the optional `init` function of each plugin.\n *\n * @param plugins The plugins to initialize.\n */\nexport function initPlugins(plugins: Plugin[]) {\n  plugins.forEach((plugin) => {\n    if (typeof plugin.init === 'function') {\n      plugin.init();\n    }\n  });\n}\n\n/**\n * Calls the optional `ready` function of each plugin.\n *\n * @param plugins The plugins to ready.\n */\nexport function readyPlugins(plugins: Plugin[]) {\n  plugins.forEach((plugin) => {\n    if (typeof plugin.ready === 'function') {\n      plugin.ready();\n    }\n  });\n}\n\n/**\n * Unregisters the plugins with the given names from the given registry\n * and directory.\n *\n * @param names The names of the plugins to unregister.\n * @param registry The registry from which to unregister the plugin's\n * exposed value.\n * @param directory The directory from which to unregister the plugin.\n */\nexport function unregisterPlugins(names: string[], registry: PluginRegistry, directory: PluginDirectory) {\n  names.forEach((name) => {\n    const plugin = directory[name];\n    if (typeof plugin.unregister === 'function') {\n      plugin.unregister();\n    }\n  });\n  names.forEach((name) => {\n    delete registry[name];\n    delete directory[name];\n  });\n}\n","module.exports = global[\"sfxCore\"] = require(\"-!/Users/shawna/Work/sfx/sfx-logic/node_modules/ts-loader/index.js!./core.ts\");"],"sourceRoot":""}